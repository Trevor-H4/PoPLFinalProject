# Generated from .\GeniusGentlemenParsing.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,19,119,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,
        0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,
        5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,9,4,9,72,
        8,9,11,9,12,9,73,1,10,1,10,1,10,1,10,1,10,1,11,1,11,3,11,83,8,11,
        1,12,1,12,1,13,3,13,88,8,13,1,13,1,13,1,14,3,14,93,8,14,1,14,4,14,
        96,8,14,11,14,12,14,97,1,15,3,15,101,8,15,1,16,1,16,1,17,1,17,1,
        17,3,17,108,8,17,1,18,1,18,3,18,112,8,18,1,18,5,18,115,8,18,10,18,
        12,18,118,9,18,0,0,19,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
        10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,1,0,7,2,
        0,9,9,32,32,2,0,33,33,60,62,4,0,37,37,42,43,45,45,47,47,1,0,13,13,
        1,0,10,10,2,0,65,90,97,122,1,0,48,57,127,0,1,1,0,0,0,0,3,1,0,0,0,
        0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,
        15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,
        25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,
        35,1,0,0,0,0,37,1,0,0,0,1,39,1,0,0,0,3,41,1,0,0,0,5,43,1,0,0,0,7,
        45,1,0,0,0,9,48,1,0,0,0,11,51,1,0,0,0,13,57,1,0,0,0,15,62,1,0,0,
        0,17,68,1,0,0,0,19,71,1,0,0,0,21,75,1,0,0,0,23,80,1,0,0,0,25,84,
        1,0,0,0,27,87,1,0,0,0,29,92,1,0,0,0,31,100,1,0,0,0,33,102,1,0,0,
        0,35,107,1,0,0,0,37,111,1,0,0,0,39,40,5,40,0,0,40,2,1,0,0,0,41,42,
        5,41,0,0,42,4,1,0,0,0,43,44,5,61,0,0,44,6,1,0,0,0,45,46,5,105,0,
        0,46,47,5,102,0,0,47,8,1,0,0,0,48,49,5,101,0,0,49,50,5,108,0,0,50,
        10,1,0,0,0,51,52,5,101,0,0,52,53,5,108,0,0,53,54,5,115,0,0,54,55,
        5,101,0,0,55,56,5,58,0,0,56,12,1,0,0,0,57,58,5,84,0,0,58,59,5,114,
        0,0,59,60,5,117,0,0,60,61,5,101,0,0,61,14,1,0,0,0,62,63,5,70,0,0,
        63,64,5,97,0,0,64,65,5,108,0,0,65,66,5,115,0,0,66,67,5,101,0,0,67,
        16,1,0,0,0,68,69,5,58,0,0,69,18,1,0,0,0,70,72,7,0,0,0,71,70,1,0,
        0,0,72,73,1,0,0,0,73,71,1,0,0,0,73,74,1,0,0,0,74,20,1,0,0,0,75,76,
        5,112,0,0,76,77,5,97,0,0,77,78,5,115,0,0,78,79,5,115,0,0,79,22,1,
        0,0,0,80,82,7,1,0,0,81,83,5,61,0,0,82,81,1,0,0,0,82,83,1,0,0,0,83,
        24,1,0,0,0,84,85,7,2,0,0,85,26,1,0,0,0,86,88,7,3,0,0,87,86,1,0,0,
        0,87,88,1,0,0,0,88,89,1,0,0,0,89,90,7,4,0,0,90,28,1,0,0,0,91,93,
        5,45,0,0,92,91,1,0,0,0,92,93,1,0,0,0,93,95,1,0,0,0,94,96,3,33,16,
        0,95,94,1,0,0,0,96,97,1,0,0,0,97,95,1,0,0,0,97,98,1,0,0,0,98,30,
        1,0,0,0,99,101,7,5,0,0,100,99,1,0,0,0,101,32,1,0,0,0,102,103,7,6,
        0,0,103,34,1,0,0,0,104,108,3,31,15,0,105,108,3,33,16,0,106,108,5,
        95,0,0,107,104,1,0,0,0,107,105,1,0,0,0,107,106,1,0,0,0,108,36,1,
        0,0,0,109,112,3,31,15,0,110,112,5,95,0,0,111,109,1,0,0,0,111,110,
        1,0,0,0,112,116,1,0,0,0,113,115,3,35,17,0,114,113,1,0,0,0,115,118,
        1,0,0,0,116,114,1,0,0,0,116,117,1,0,0,0,117,38,1,0,0,0,118,116,1,
        0,0,0,10,0,73,82,87,92,97,100,107,111,116,0
    ]

class GeniusGentlemenParsingLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    IF = 4
    EL = 5
    ELSE = 6
    TRUE = 7
    FALSE = 8
    COLON = 9
    WHITESPACE = 10
    PASS = 11
    CONDIT = 12
    ARITHMETIC_OPERATOR = 13
    NEWLINE = 14
    INT = 15
    LETTERS = 16
    DIGITS = 17
    CHARS = 18
    VAR = 19

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'='", "'if'", "'el'", "'else:'", "'True'", "'False'", 
            "':'", "'pass'" ]

    symbolicNames = [ "<INVALID>",
            "IF", "EL", "ELSE", "TRUE", "FALSE", "COLON", "WHITESPACE", 
            "PASS", "CONDIT", "ARITHMETIC_OPERATOR", "NEWLINE", "INT", "LETTERS", 
            "DIGITS", "CHARS", "VAR" ]

    ruleNames = [ "T__0", "T__1", "T__2", "IF", "EL", "ELSE", "TRUE", "FALSE", 
                  "COLON", "WHITESPACE", "PASS", "CONDIT", "ARITHMETIC_OPERATOR", 
                  "NEWLINE", "INT", "LETTERS", "DIGITS", "CHARS", "VAR" ]

    grammarFileName = "GeniusGentlemenParsing.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


